{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAmCeA,MA7Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAGf,oBAAGL,UAAU,gBAAb,UAA8BH,EAAQS,MAAM,EAAG,KAA/C,gBC4BDC,G,kNAvCbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAE6BC,IAAMC,IAAI,4DAFvC,gBAEWJ,EAFX,EAEHK,KAAOA,KAAOL,OAErB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAJzB,2C,uDAOZ,WACEQ,KAAKN,c,oBAEP,WAAS,MAEuBM,KAAKT,MAA3BC,EAFD,EAECA,UAAWC,EAFZ,EAEYA,OAEnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EAEG,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GAAK,OAEf,aADA,CACC,EAAD,CAAsBC,GAAID,EAAMC,GAAIxB,KAAMuB,EAAMvB,KAAMC,MAAOsB,EAAMtB,MAAOC,QAASqB,EAAMrB,QAASC,OAAQoB,EAAME,mBAAoBrB,OAAQmB,EAAMnB,QAAtImB,EAAMC,e,GAhChBE,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7377b308.chunk.js","sourcesContent":["// 1. 모듈들을 import\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\n// 3. 설정한 프로퍼티 타입에 따라 보여질 함수로 HTML 태크를 작성\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"movie__genres\">\r\n                    {genres.map((genre, index) => (\r\n                      <li key={index} className=\"genres__genre\">{genre}</li>\r\n                    ))}\r\n                </ul>\r\n                <p className=\"movie_summary\">{summary.slice(0, 180)}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// 2. 프로퍼티 타입 설정\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\n// 4. Movie 함수를 export\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\"\n\nclass App extends React.Component {\n  // 1. state(상태) 설정.\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  // 4. 자바 스크립트에서 데이터를 올바르게 불러오기 위해 async await 구문을 사용\n  getMovies = async () => {\n    // 5. axios 모듈을 통해 get 방식으로 json 데이터를 불러온 후 movies.data.data.movies 경로의 데이터를 구조분해 할당.\n    const {data: {data: {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\")\n    // 6. setState()를 호출하여 state의 movies에 바로 위 불러온 json 데이터 movies를 할당, isLoading의 상태 변경.\n    this.setState({ movies, isLoading: false });\n  }\n  // 3. component가 render되면 실행되는 함수\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    // 2. 설정한 state(상태)의 변수들을 구조분해 할당.\n    const { isLoading, movies } = this.state;\n    // 7. isLoading의 상태에 따른 삼항 연산자를 사용. 로딩이 완료되었을 경우 state의 movies에 저장된 데이터를 자바 스크립트 map() 함수를 통해 조건에 맞게 HTML 구조를 작성.\n    return (\n      <section className=\"container\">\n        {isLoading \n          ? (\n            <div className=\"loader\">\n              <span className=\"loader__text\">Loading...</span>\n            </div>\n          ) : (\n            <div className=\"movies\">\n              {movies.map(movie => (\n                // 8. Movie.js 파일에 따로 설정해둔 함수를 불러와서 조건에 맞게 프로퍼티 할당.\n                <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres} />\n              ))}\n            </div>\n          )}\n      </section>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}